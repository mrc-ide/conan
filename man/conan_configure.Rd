% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/configure.R
\name{conan_configure}
\alias{conan_configure}
\title{Configuration for conan}
\usage{
conan_configure(
  method,
  ...,
  path_lib,
  path_bootstrap,
  delete_first = FALSE,
  show_log = TRUE,
  poll = 1,
  path = "."
)
}
\arguments{
\item{method}{The method to use; currently "script" and
"pkgdepends" are supported.}

\item{...}{Additional arguments, method specific. See Details.}

\item{path_lib}{The library to install into. Could be an absolute
or a relative path.}

\item{path_bootstrap}{The path to a bootstrap library to use. This
needs to contain all the packages required for the method you
are using. For "script" this is just "remotes", but for
"pkgdepends" it'll be more.}

\item{delete_first}{Should we delete the library before installing
into it?}

\item{show_log}{Should we show the log as the installation runs?}

\item{poll}{Polling interval for logs in seconds}

\item{path}{Path to the root where you would run conan from;
typically this is the same path is the root of the project,
often as the working directory.}

\item{environment}{A list with components \code{packages} and \code{sources}
to be used to attempt to work out what packages should be
installed; only used when no explicit provisioning approach is
used.  See hermod "packages and provisioning" vignette for
details.}
}
\value{
A list with class \code{conan_config}. Do not modify
this object.
}
\description{
Configuration for running conan. Some common options and some
specific to different provisioning methods.
}
\details{
Different methods support different additional arguments:
\itemize{
\item method \code{script} supports the argument \code{script}, which is the
name of the script to run, defaults to "provision.R"
\item method \code{pkgdepends} supports the arguments \code{refs}, which can be
a character vector of references (rather than reading from the
file \code{pkgdepends.txt}) and \code{policy} which is passed through to
\link[pkgdepends:pkg_installation_proposal]{pkgdepends::new_pkg_installation_proposal}.
}
}
