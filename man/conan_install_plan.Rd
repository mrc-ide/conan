% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{conan_install_plan}
\alias{conan_install_plan}
\alias{conan_write_plan}
\title{Create library from plan}
\usage{
conan_install_plan(lib, plan, path_bootstrap = NULL, path_cache = NULL)

conan_write_plan(plan, packages, repos = NULL, policy = "upgrade")
}
\arguments{
\item{lib}{The path to install into. We will create a
self-contained library at this address.}

\item{plan}{A plan file.}

\item{path_bootstrap}{The path to find the "bootstrap library" at
(created via \code{\link[=conan_bootstrap]{conan_bootstrap()}}; this contains the
packages required to install your packages, kept separate from
the \code{lib}. If not given then a per-session path will be
used (within \code{\link[=tempdir]{tempdir()}}) but installation can be sped up by
using a persistent path. If \code{NULL} but the environment variable
\code{CONAN_PATH_BOOTSTRAP} we will use the directory pointed at by
that environment variable.}

\item{path_cache}{Path to the pkgdepends cache. Falls back on
environment variable \code{CONAN_PATH_CACHE}, or if that is not set
to a temporary directory.}

\item{packages}{A character vector of packages to install. These
can be names of cran packages or github references etc; see
\code{\link[pkgdepends:pkg_installation_proposal]{pkgdepends::new_pkg_installation_proposal()}} for more details}

\item{repos}{A character vector of repositories to use when
installing. A suitable CRAN repo will be added if not detected
(using the \code{cran} argument if provided)}

\item{policy}{Should be either "lazy" or "upgrade", with a default
of "upgrade"}
}
\value{
Nothing, called for side effect of creating a library at
\code{lib}.
}
\description{
Wrapper around \code{\link[=conan_install]{conan_install()}} which uses a small json
file to describe how to proceed. This reduces the number of
command line arguments that might need passing around.
}
\author{
Richard Fitzjohn
}
